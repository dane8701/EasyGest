<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="uTILISATEURSBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>166, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtSearch.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA69JREFUaEPt
        mU1oE0EUx6PiF+pJ/Liq9QtBkHZn+iFSFL3oVcFvFBERRdC7bHbTYimoeFMPggeFoNV2ZlNbD6IIChZB
        EURUPLfgB/XSaDX+p3mxu9ttbTczaSL5wR+SvNn35u3OzL6ZJKpUKUNsy1ueZPKww8R1h8nn0AD0JS/R
        n2TimcvlNXw+1MI7l9Fl5UOSe9sdLh+iw8NQbpIadizZm7TENnIzfdgNnTWqMxGdnKq6bUuuJLelJcm8
        vejA91CHitGgY3l7yH1pwFi3IzqSF5dvMU9SKS4228xb08o6Fiupz+o3tGmB3gWuGdVvXH+ewphFdTKi
        A0p9UxnvI/OKiZcRfnIYrklqZob8ijQmcBaBT+YSuRnUbNLYCXumy+Rp+PgR8pnDTdlPzfTi1mZWIUBo
        Toj+lCUbqUlsaMippdrnWw66rGsFNdGHw0UmFGgoxTP1ZC4apy7TBJ/ZYAyvi8x6cOtFczAAxOVRMmsD
        Po+H46inRebigUMvEIDLp2TSippn8K8qAl8ymp6KKiXg8GfAOYYBmbWTsrwtgVhYCFo3ZZaQOT64I8f8
        jl3mvSKTMRDnjT9mkosjZIqPy8TNgFPLayWTMXDz2vwxMZRvkCk+4ZeWyzJbyWSM/MtyNCbeXy/IFB84
        +ux3qkoNMhnDrhXr/DGhATLFB04Cb127Ob2QTMZoa+pc5I8JZckUHzgph0SGyBQfOAkMLZeL1WQyhlvX
        vdYfE9IxtP6TyT5m+WXyApmMgWq63R9Ty/IbUbq/J5MxEONTIKYlD5ApPlElisnhhTm4wx8L0lOiKOAs
        WDSisIuzkfoXyqeaD8FYGkv5yDIeNRiZtYGF5UQ4jtYyXhGxscqqBMlcNGq/D5+hLa/mjZUieqsrv+o4
        YKPl9lvIt5mtriJiBVPCQiBOxT584OJM3kfIr+W9vtiQnk9N9YNkzB8HFWTJXsPJTHBAx+QHdOASEt6p
        qli7+dE8JbdersembBf2M5fR5mPomvFlPhntR6YTSIgrNZm5FFo/2g6xuXjgWKIr0laQ6SejGDkw4PIu
        Ao45MZxAWXT+TuE9kd6dnuUyeSui3V9huD5u39izYCSoSezGnqX5lS3wR8+vvIJ/9ESVHSoZ3PnbqtPj
        SSVTij1R0Vyt7ZuNDneEE/Crmsx0MJlkoCcVlIx3LyIBv6rJlBxVGaCz3aHOh+Tto+blzcRPRpylZpVB
        dDIVlkQBe0N6DhK4r5JwLXmOfq5M1JzBNuAgfa1SpXQkEn8A3xhCqGty13MAAAAASUVORK5CYII=
</value>
  </data>
</root>